<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>3</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.22">
      <diskUsageWithoutBuilds>12292</diskUsageWithoutBuilds>
      <slaveWorkspacesUsage class="concurrent-hash-map">
        <entry>
          <string></string>
          <concurrent-hash-map>
            <entry>
              <string>/opt/hudson/jobs/zPluginCheck/workspace</string>
              <long>4096</long>
            </entry>
          </concurrent-hash-map>
        </entry>
      </slaveWorkspacesUsage>
    </hudson.plugins.disk__usage.DiskUsageProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(Default)</jdk>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>12 23 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.groovy.SystemGroovy plugin="groovy@1.14">
      <scriptSource class="hudson.plugins.groovy.StringScriptSource">
        <command>// Works only with Jenkins &gt;= 1.501
//hudson.model.Hudson.instance.updateCenter.getSiteList().each({hudson.model.UpdateSite site -&gt; site.doInvalidateData(); println(site.isDue())})
//hudson.model.Hudson.instance.updateCenter.updateAllSites()

def pluginsWithUpdates = []
hudson.model.Hudson.instance.pluginManager.plugins.inject(pluginsWithUpdates) { List toUpdate, plugin -&gt;
if(plugin.hasUpdate())
{
toUpdate &lt;&lt; &quot;${plugin.longName}/${plugin.shortName}:${plugin.version}&quot;
}
toUpdate
}.inspect()
  
if(!pluginsWithUpdates.empty) {
  println(pluginsWithUpdates)
  throw new hudson.AbortException(&quot;Found available updates.&quot;)
}
//def pluginsWithUpdates = hudson.model.Hudson.instance.pluginManager.plugins.inject([]) { List toUpdate, plugin -&gt;
//if(plugin.hasUpdate())
//{
//toUpdate &lt;&lt; &quot;${plugin.longName}/${plugin.shortName}:${plugin.version}&quot;
//}
//toUpdate
//}.inspect()
//if(pluginsWithUpdates.size() &gt; 0) {
//  println(pluginsWithUpdates)
//  throw new hudson.AbortException(&quot;Found available updates.&quot;)
//}
</command>
      </scriptSource>
      <bindings></bindings>
      <classpath></classpath>
    </hudson.plugins.groovy.SystemGroovy>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.5">
      <recipients>mkuppe@ecf-project.org</recipients>
      <dontNotifyEveryUnstableBuild>true</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
</project>